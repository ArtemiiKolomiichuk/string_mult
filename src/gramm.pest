//! Simple grammar rules for parsing string multiplication commands.

/// signed floating point or integer number
num = { ("-")? ~ (ASCII_DIGIT)+ ~ ("." ~ (ASCII_DIGIT)+)? }
/// signed integer number; it only appears in the 'mult' optional index and 'duplicate' command arguments;
/// integer numbers in 'mult' and 'multAll' commands are recognized as num
int = { ("-")? ~ (ASCII_DIGIT)+ }

/// multiplication operator with optional index
mult = { "*" ~ ("[" ~ int ~ "]")? }
/// multiplication operator for multiplying all numbers in string
multAll = { "**" }
/// duplication operator
duplicate = { "***" }

/// part of the string param that is not a number
inner_str_text = { (!(str_marks | num) ~ ANY)+ }
/// string parameter for command surrounded by quote marks
str_param = { (str_marks ~ (!str_marks ~ (num | inner_str_text))* ~ str_marks) }

/// command for multiplying string
command = { spacing* ~ str_param  ~ (spacing* ~ (((multAll | mult) ~ spacing* ~ num) | (duplicate ~ spacing* ~ int)))+ }

/// list of commands
commands_list = {(file_spacing* ~ command ~ file_spacing*)+}

/// silent rule for inline whitespace
spacing = _{ " " | "\t" }
/// whitespace spacing in file
file_spacing = _{ spacing | "\n"}
/// silent rule for quote marks
str_marks = _{ "\"" }
